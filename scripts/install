#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing Ruby..."

ynh_ruby_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

mkdir -p "$install_dir/files" "$install_dir/log" "$install_dir/tmp" "$install_dir/public/plugin_assets"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# SPECIFIC SETUP
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration file..."

ynh_config_add --template="database.example.yml" --destination="$install_dir/config/database.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/config/database.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown "$app:$app" "$install_dir/config/database.yml"

ynh_config_add --template="configuration.yml.example" --destination="$install_dir/config/configuration.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/config/configuration.yml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown "$app:$app" "$install_dir/config/configuration.yml"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Building app..."

_redmine_ruby_install

pushd "$install_dir"
	ynh_hide_warnings bundle exec rake generate_secret_token RAILS_ENV=production
	ynh_hide_warnings bundle exec rake db:migrate RAILS_ENV=production
    #ynh_hide_warnings bundle exec rake redmine:load_default_data RAILS_ENV=production
popd

# Setting up LDAP authentification
ynh_config_add --template="db-ldap.sql" --destination="$install_dir/config/db-ldap.sql"
ynh_psql_db_shell < "$install_dir/config/db-ldap.sql"
ynh_safe_rm "$install_dir/config/db-ldap.sql"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
yunohost service add "$app" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"  --wait_until="WEBrick::HTTPServer#start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
